program: eqlist               { driver->insert($1); }
;

eqlist: equals SCOLON eqlist  { $$ = $3; $$.push_back($1); }
| equals SCOLON               { $$.push_back($1);          }
;

equals: expr EQUAL expr       { $$.push_back($1); $$.push_back($3); }
;

expr: NUMBER                  { $$.push_back($1); }
| expr PLUS expr              { 
                                $$ = $1;
                                $$.insert($$.end(), $3.begin(), $3.end());
                              }
| expr MINUS expr             { 
                                $$ = $1; 
                                std::transform($3.begin(), $3.end(), $3.begin(),
                                               [](auto x) { return -x; });
                                $$.insert($$.end(), $3.begin(), $3.end());
                              }
;